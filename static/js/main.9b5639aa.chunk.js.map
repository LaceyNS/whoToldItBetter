{"version":3,"sources":["Landing.js","DisplayingData.js","App.js","serviceWorker.js","index.js"],"names":["Landing","className","to","Component","DisplayingData","movieCall","userQ","axios","url","method","responseType","params","api_key","query","include_adult","then","response","data","results","length","setState","movieArray","undefined","axiosBookCall","dataType","paramsSerializer","Qs","stringify","arrayFormat","reqUrl","key","q","xmlToJSON","res","booksResult","JSON","parse","convert","xml2json","compact","spaces","GoodreadsResponse","search","work","bookArray","catch","alert","handleFormSubmit","event","preventDefault","active","state","userInput","handleFormChange","target","value","handleTitleOption","movieRating","attributes","movieYear","Date","getFullYear","name","movieInfo","title","id","image","release","rating","handleTitleBookOption","bookRating","newBookRating","Math","round","bookInfo","author","onSubmit","this","type","onChange","placeholder","required","aria-label","slice","map","movie","onClick","data-title","data-id","data-poster","poster_path","data-rating","vote_average","data-release","release_date","aria-labelledby","book","_text","best_book","data-value","text","data-image","image_url","average_rating","data-author","original_publication_year","src","alt","App","basename","process","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.9b5639aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink} from \"react-router-dom\";\n\n\nclass Landing extends Component { \nrender(){\n  return(\n    <header>\n      <div className=\"hContainer \n      wrapper\">\n        <h1> Who told it better?</h1>\n        <div className=\"lineWSubtitle\">\n          <div className=\"breakLine\"></div>\n          <p>The movie or the book?</p>\n        </div>\n        <NavLink to=\"/data\" className=\"hButton\">\n          <button className=\"landingButton\">continue</button>\n        </NavLink>\n      </div>\n    </header>\n  )\n}\n\n}\n\nexport default Landing;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Qs from \"qs\";\nimport convert from 'xml-js'\n\n\nclass DisplayingData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInput: \"\",\n      movieArray: [],\n      bookArray: [],\n      bookInfo: {},\n      movieInfo: {\n        title: \"\",\n        id: \"\",\n        image: \"no poster\",\n        rating: \"\"\n      },\n      active: false\n    };\n  }\n\n  // axios call to TMDB\n  movieCall = (userQ) => {\n    axios({\n      url: `https://api.themoviedb.org/3/search/movie`,\n      method: `GET`,\n      responseType: `json`,\n      params: {\n        api_key: `4f70306aa4e939e1535c12686b6403c7`,\n        query: userQ,\n        include_adult: 'false',\n      },\n    }).then((response) => {\n      response.data.results.length > 0 ? (\n        this.setState({\n          movieArray: response.data.results,\n        })\n        ) : (\n        this.setState({\n          movieArray: undefined\n        })\n        )\n    });\n  };\n\n  // axios call to Goodreads\n  axiosBookCall = (userQ) => {\n    axios({\n      method: \"GET\",\n      url: \"https://proxy.hackeryou.com\",\n      dataType: \"json\",\n      paramsSerializer: function (params) {\n        return Qs.stringify(params, { arrayFormat: \"brackets\" });\n      },\n      params: {\n        reqUrl: `https://www.goodreads.com/search.xml`,\n        params: {\n          key: `PPD00ZRT7jL7X8jXfJmmQ`,\n          q: userQ,\n        },\n      },\n      xmlToJSON: true,\n    })\n      .then((res) => {\n        const toJson = JSON.parse(\n          convert.xml2json(res.data, { compact: true, spaces: 4 })\n        );\n        const booksResult = toJson.GoodreadsResponse.search.results.work;\n        return this.setState({\n          bookArray: booksResult,\n        });\n      })\n      .catch((res) => {\n        alert(\"No response, try again\");\n      });\n  };\n\n  // for when form submits, pass userInput through to axios\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      active: true\n    })\n    if (this.state.userInput !== \"\") {\n      this.movieCall(this.state.userInput);\n      this.axiosBookCall(this.state.userInput);\n    } else {\n      alert(\"try that again\")\n    }\n  };\n\n  // Grabs user input, which is then used by handleFormSubmit\n  handleFormChange = (event) => {\n    this.setState({\n      userInput: event.target.value,\n    });\n  };\n\n  handleTitleOption = (event) => {\n    let movieRating = event.target.attributes[3].value * 10\n    let movieYear = new Date(event.target.attributes[\"data-release\"].value).getFullYear()\n    if (event.target.attributes[2].name === \"data-poster\") {\n      this.setState({\n        movieInfo: {\n          title: event.target.attributes[0].value,\n          id: event.target.attributes[1].value,\n          image: event.target.attributes[2].value,\n          release: movieYear,\n          rating: movieRating,\n        },\n      });\n    } else {\n      this.setState({\n        movieInfo: {\n          title: event.target.attributes[0].value,\n          id: event.target.attributes[1].value,\n          image: \"no poster\",\n          release: movieYear,\n          rating: event.target.attributes[2].value * 10\n        }\n      })\n    }\n\n  };\n\n  handleTitleBookOption = (event) => {\n    let bookRating = event.target.attributes[2].value\n    let newBookRating = Math.round((bookRating * 2) * 10)\n    this.setState({\n      bookInfo: {\n        title: event.target.attributes[0].value,\n        image: event.target.attributes[1].value,\n        rating: newBookRating,\n        author: event.target.attributes[3].value,\n        release: event.target.attributes[4].value\n      }\n    })\n  }\n\n  render() {\n    return (\n      <main>\n        <div className=\"mContainer\">\n          <div className=\"mTitles\">\n            <h1>Who Told It Better</h1>\n            <div className=\"breakLine\"></div>\n          </div>\n\n        <p className=\"instructions\">\n          Did you ever wonder if the book or the movie told the\n          story better? So did we.\n        </p>\n        <p>\n          Pulling from online resources we hope to answer that\n          question here.\n        </p>\n        <p>Type in your title, and then follow the prompts.</p>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <input\n            type=\"text\"\n            value={this.state.userInput}\n            onChange={this.handleFormChange}\n            placeholder=\"Title\"\n            required\n          />\n          <button\n            type=\"submit\"\n            aria-label=\"Search\"\n            className=\"mButton\">\n            Search\n          </button>\n        </form>\n\n\n        {\n          this.state.active ? \n        <>\n          <div className=\"movies\">\n              <h3 id=\"movieList\">Movie List</h3>\n\n            <div className=\"list\">\n              {this.state.movieArray === undefined ? (\n                <p>Sorry, no movies matched!</p>\n              ) : (\n              this.state.movieArray.slice([0], [5]).map((movie) => {\n                return (\n                  <>\n                    <button\n                      key={movie.id}\n                      onClick={this.handleTitleOption}\n                      data-title={movie.title}\n                      data-id={movie.id}\n                      data-poster={movie.poster_path}\n                      data-rating={movie.vote_average}\n                      data-release={movie.release_date}\n                      aria-labelledby=\"movieList\"\n                      className=\"buttonChoices\">\n                      {movie.title}\n                    </button>\n                  </>\n                )}\n              )\n              )}\n              </div>\n          </div>\n\n        <div className=\"books\">\n          <h3 id=\"bookList\">Book List</h3>\n          <div className=\"list\">\n            {this.state.bookArray === undefined ? (\n              <p>Sorry, no books matched!</p>\n            ) : (\n              this.state.bookArray.slice([0], [5]).map((book) => {\n                return (\n                  <button\n                    key={book.id._text}\n                    onClick={this.handleTitleBookOption}\n                    data-title={book.best_book.title._text}\n                    data-value={book.best_book.title.text}\n                    data-image={book.best_book.image_url._text}\n                    data-rating={book.average_rating._text}\n                    data-author={book.best_book.author.name._text}\n                    data-release={book.original_publication_year._text}\n                    aria-labelledby=\"bookList\"\n                    className=\"buttonChoices\">\n                      {book.best_book.title._text}\n                  </button>\n                );\n              })\n            )}\n          </div>\n        </div> \n        </>\n        : null  }\n\n        <section className=\"infoBox wrapper\">\n          <div className=\"moviePoster\">\n            {this.state.bookInfo.image ? <p>Rating: {this.state.movieInfo.rating}</p> : \"\"}\n            <div className=\"imgContainer\">\n              {this.state.movieInfo.image === \"no poster\" ? (\n                <img\n                  className=\"icons\"\n                  src={\"./Assets/movie.png\"}\n                  alt={`A cartoon style movie clapperboard.`}\n                />\n                ) : (\n                    <img className={this.state.movieInfo.rating > this.state.bookInfo.rating ? \"selectedImg\" : null}\n                    src={`http://image.tmdb.org/t/p/w500/${this.state.movieInfo.image}`}\n                    alt={`Movie Poster of ${this.state.movieInfo.title}`}\n                  />\n                )}\n            </div>\n            <div className=\"moreDetail\">  \n              <h2>{this.state.movieInfo.title}</h2>\n              <p>{this.state.movieInfo.release}</p>\n              {this.state.movieInfo.rating > this.state.bookInfo.rating ? <p className=\"winner\">Winner!</p> : \"\" }\n            </div>\n          </div>\n\n          <div className=\"bookCover\">\n              {this.state.bookInfo.image ? <p>Rating: {this.state.bookInfo.rating}</p> : \"\"}\n              <div className=\"imgContainer\">\n                {this.state.bookInfo.image === undefined || \"\" ? (\n                    <img\n                      className=\"icons\"\n                      src={\"./Assets/book.png\"}\n                      alt={`An cartoon style open book.`}\n                    />\n                ) : (\n                    <img className={this.state.movieInfo.rating < this.state.bookInfo.rating ? \"selectedImg\" : null }\n                      src={this.state.bookInfo.image}\n                      alt={`Book cover for ${this.state.bookInfo.title}`}\n                    />\n                )}\n              </div>\n              <div className=\"moreDetail\">  \n                <h2>{this.state.bookInfo.title}</h2>\n                <p>{this.state.bookInfo.author} </p>\n                 <p>{this.state.bookInfo.release} </p>\n                {this.state.movieInfo.rating < this.state.bookInfo.rating ? <p className=\"winner\"> Winner! </p> : \"\"}\n              </div> \n          </div>\n        </section>\n      </div>\n    </main>\n    );\n  }\n}\n\nexport default DisplayingData;","import React, { Component } from 'react';\nimport './App.scss';\nimport Landing from './Landing'\nimport DisplayingData from './DisplayingData'\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\n\n\nclass App extends Component {\n\n\n  render(){\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Route path=\"/data\" component={DisplayingData} />\n          <Route exact path=\"/\" component={Landing} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './App.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}